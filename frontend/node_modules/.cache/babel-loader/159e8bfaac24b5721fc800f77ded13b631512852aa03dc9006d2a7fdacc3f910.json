{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elean\\\\Saber_em_container\\\\frontend\\\\src\\\\pages\\\\Dctfweb.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../styles/dctfweb.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dctfweb = () => {\n  _s();\n  // Estado e lógica existentes permanecem inalterados\n  const hoje = new Date();\n  const mesAtual = String(hoje.getMonth() + 1).padStart(2, '0');\n  const anoAtual = hoje.getFullYear();\n  const [competencia, setCompetencia] = useState(`${mesAtual}/${anoAtual}`);\n  const [empresas, setEmpresas] = useState([]);\n  const [selecionadas, setSelecionadas] = useState([]);\n  const [executando, setExecutando] = useState(false);\n  const [mensagem, setMensagem] = useState('');\n  const [atualizandoStatus, setAtualizandoStatus] = useState(false);\n  const [filtros, setFiltros] = useState({\n    cod: '',\n    razaosocial: '',\n    operador: '',\n    cnpj: '',\n    situacao: '',\n    pagamento: '',\n    data_vencimento: '',\n    valor: '',\n    postado: '',\n    data_geracao: ''\n  });\n  useEffect(() => {\n    if (!competencia) return;\n    carregarEmpresas();\n  }, [competencia]);\n  const carregarEmpresas = () => {\n    axios.get(`${process.env.REACT_APP_API_BASE}/api/empresas-dctfweb/?competencia=${competencia}`).then(res => setEmpresas(res.data)).catch(() => setMensagem('Erro ao carregar empresas.'));\n  };\n\n  // Função para alternar o status \"postado\"\n  const alternarStatusPostado = async (cnpj, statusAtual) => {\n    // Definir o novo status (alternando entre \"Sim\" e \"Não\" ou adicionando \"Sim\" se for nulo)\n    const novoStatus = statusAtual === 'Sim' ? 'Não' : 'Sim';\n    setAtualizandoStatus(true);\n    setMensagem('');\n    try {\n      // Chamar API para atualizar o status\n      const response = await axios.post(`${process.env.REACT_APP_API_BASE}/api/atualizar-status-postado/`, {\n        cnpj: cnpj,\n        postado: novoStatus === 'Sim' // Enviar true para \"Sim\" e false para \"Não\"\n      });\n\n      // Atualizar a lista local para refletir a mudança sem precisar recarregar\n      setEmpresas(empresas.map(emp => {\n        if (emp.cnpj === cnpj) {\n          return {\n            ...emp,\n            postado: novoStatus\n          };\n        }\n        return emp;\n      }));\n      setMensagem(`Status atualizado com sucesso para \"${novoStatus}\"`);\n\n      // Opcional: Recarregar dados do servidor para garantir consistência\n      // carregarEmpresas();\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Erro ao atualizar status:', error);\n      setMensagem(`Erro ao atualizar status: ${((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.mensagem) || error.message}`);\n    } finally {\n      setAtualizandoStatus(false);\n    }\n  };\n\n  // Restante do código existente\n  const handleCheckbox = cnpj => {\n    setSelecionadas(prev => prev.includes(cnpj) ? prev.filter(item => item !== cnpj) : [...prev, cnpj]);\n  };\n  const baixarZip = (endpoint, nomeArquivo, sucessoMsg, erroMsg) => async () => {\n    // Código existente\n    // ...\n  };\n\n  // Outras funções existentes \n  const executar = baixarZip(/* ... */);\n  const gerarRecibos = baixarZip(/* ... */);\n  const gerarDeclaracoes = baixarZip(/* ... */);\n  const gerarXmls = baixarZip(/* ... */);\n  const gerarXmlsAssinados = baixarZip(/* ... */);\n  const consultarGuiasAndamento = baixarZip(/* ... */);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5 shadow p-4 rounded bg-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-file-alt header-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"titulo-pagina\",\n        children: \"Relat\\xF3rios DCTFWeb\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), mensagem && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `alert ${mensagem.includes('⚠️') || mensagem.includes('Erro') ? 'alert-danger' : 'alert-info'} ${atualizandoStatus ? 'alert-warning' : ''}`,\n      children: atualizandoStatus ? '⏳ Atualizando status...' : mensagem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex gap-2 mb-3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex flex-wrap justify-content-end gap-2 mb-2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-responsive\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-bordered table-hover text-center align-middle fs-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"table-light\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: empresas.filter(emp => Object.entries(filtros).every(([campo, valor]) => {\n            var _emp$campo;\n            return (_emp$campo = emp[campo]) === null || _emp$campo === void 0 ? void 0 : _emp$campo.toString().toLowerCase().includes(valor.toLowerCase());\n          })).map(empresa => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: selecionadas.includes(empresa.cnpj),\n                onChange: () => handleCheckbox(empresa.cnpj)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: empresa.cod\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"text-start\",\n              children: empresa.razaosocial\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: empresa.operador\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: empresa.cnpj\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `badge ${empresa.situacao === 'Não gerado' ? 'bg-danger' : 'bg-success'}`,\n                children: empresa.situacao\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: empresa.pagamento === 'LANÇADO' ? 'text-success fw-bold' : empresa.pagamento ? 'text-danger fw-bold' : 'text-muted',\n                children: empresa.pagamento || '-'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: empresa.data_vencimento || '-'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: empresa.valor\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `btn btn-sm ${empresa.postado === 'Sim' ? 'btn-success' : 'btn-outline-secondary'}`,\n                onClick: () => alternarStatusPostado(empresa.cnpj, empresa.postado),\n                disabled: atualizandoStatus,\n                children: empresa.postado || 'Não'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: empresa.data_geracao || '-'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 19\n            }, this)]\n          }, empresa.cnpj, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s(Dctfweb, \"W++0MdxHL7lhjhiA2Y+N56/Kv80=\");\n_c = Dctfweb;\nexport default Dctfweb;\nvar _c;\n$RefreshReg$(_c, \"Dctfweb\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Dctfweb","_s","hoje","Date","mesAtual","String","getMonth","padStart","anoAtual","getFullYear","competencia","setCompetencia","empresas","setEmpresas","selecionadas","setSelecionadas","executando","setExecutando","mensagem","setMensagem","atualizandoStatus","setAtualizandoStatus","filtros","setFiltros","cod","razaosocial","operador","cnpj","situacao","pagamento","data_vencimento","valor","postado","data_geracao","carregarEmpresas","get","process","env","REACT_APP_API_BASE","then","res","data","catch","alternarStatusPostado","statusAtual","novoStatus","response","post","map","emp","error","_error$response","_error$response$data","console","message","handleCheckbox","prev","includes","filter","item","baixarZip","endpoint","nomeArquivo","sucessoMsg","erroMsg","executar","gerarRecibos","gerarDeclaracoes","gerarXmls","gerarXmlsAssinados","consultarGuiasAndamento","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","every","campo","_emp$campo","toString","toLowerCase","empresa","type","checked","onChange","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/elean/Saber_em_container/frontend/src/pages/Dctfweb.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport '../styles/dctfweb.css';\r\n\r\nconst Dctfweb = () => {\r\n  // Estado e lógica existentes permanecem inalterados\r\n  const hoje = new Date();\r\n  const mesAtual = String(hoje.getMonth() + 1).padStart(2, '0');\r\n  const anoAtual = hoje.getFullYear();\r\n  const [competencia, setCompetencia] = useState(`${mesAtual}/${anoAtual}`);\r\n\r\n  const [empresas, setEmpresas] = useState([]);\r\n  const [selecionadas, setSelecionadas] = useState([]);\r\n  const [executando, setExecutando] = useState(false);\r\n  const [mensagem, setMensagem] = useState('');\r\n  const [atualizandoStatus, setAtualizandoStatus] = useState(false);\r\n\r\n  const [filtros, setFiltros] = useState({\r\n    cod: '',\r\n    razaosocial: '',\r\n    operador: '',\r\n    cnpj: '',\r\n    situacao: '',\r\n    pagamento: '',\r\n    data_vencimento: '',\r\n    valor: '',\r\n    postado: '',\r\n    data_geracao: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (!competencia) return;\r\n\r\n    carregarEmpresas();\r\n  }, [competencia]);\r\n\r\n  const carregarEmpresas = () => {\r\n    axios\r\n      .get(`${process.env.REACT_APP_API_BASE}/api/empresas-dctfweb/?competencia=${competencia}`)\r\n      .then((res) => setEmpresas(res.data))\r\n      .catch(() => setMensagem('Erro ao carregar empresas.'));\r\n  };\r\n\r\n  // Função para alternar o status \"postado\"\r\n  const alternarStatusPostado = async (cnpj, statusAtual) => {\r\n    // Definir o novo status (alternando entre \"Sim\" e \"Não\" ou adicionando \"Sim\" se for nulo)\r\n    const novoStatus = statusAtual === 'Sim' ? 'Não' : 'Sim';\r\n    \r\n    setAtualizandoStatus(true);\r\n    setMensagem('');\r\n    \r\n    try {\r\n      // Chamar API para atualizar o status\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_BASE}/api/atualizar-status-postado/`,\r\n        { \r\n          cnpj: cnpj, \r\n          postado: novoStatus === 'Sim'  // Enviar true para \"Sim\" e false para \"Não\"\r\n        }\r\n      );\r\n      \r\n      // Atualizar a lista local para refletir a mudança sem precisar recarregar\r\n      setEmpresas(empresas.map(emp => {\r\n        if (emp.cnpj === cnpj) {\r\n          return { ...emp, postado: novoStatus };\r\n        }\r\n        return emp;\r\n      }));\r\n      \r\n      setMensagem(`Status atualizado com sucesso para \"${novoStatus}\"`);\r\n      \r\n      // Opcional: Recarregar dados do servidor para garantir consistência\r\n      // carregarEmpresas();\r\n      \r\n    } catch (error) {\r\n      console.error('Erro ao atualizar status:', error);\r\n      setMensagem(`Erro ao atualizar status: ${error.response?.data?.mensagem || error.message}`);\r\n    } finally {\r\n      setAtualizandoStatus(false);\r\n    }\r\n  };\r\n\r\n  // Restante do código existente\r\n  const handleCheckbox = (cnpj) => {\r\n    setSelecionadas((prev) =>\r\n      prev.includes(cnpj) ? prev.filter((item) => item !== cnpj) : [...prev, cnpj]\r\n    );\r\n  };\r\n\r\n  const baixarZip = (endpoint, nomeArquivo, sucessoMsg, erroMsg) => async () => {\r\n    // Código existente\r\n    // ...\r\n  };\r\n\r\n  // Outras funções existentes \r\n  const executar = baixarZip(/* ... */);\r\n  const gerarRecibos = baixarZip(/* ... */);\r\n  const gerarDeclaracoes = baixarZip(/* ... */);\r\n  const gerarXmls = baixarZip(/* ... */);\r\n  const gerarXmlsAssinados = baixarZip(/* ... */);\r\n  const consultarGuiasAndamento = baixarZip(/* ... */);\r\n\r\n  return (\r\n    <div className=\"container mt-5 shadow p-4 rounded bg-white\">\r\n      {/* Código existente para título e filtros */}\r\n      <div className=\"header-wrapper\">\r\n        <i className=\"fas fa-file-alt header-icon\"></i>\r\n        <h2 className=\"titulo-pagina\">Relatórios DCTFWeb</h2>\r\n      </div>\r\n\r\n      {mensagem && (\r\n        <div className={`alert ${mensagem.includes('⚠️') || mensagem.includes('Erro') ? 'alert-danger' : 'alert-info'} ${atualizandoStatus ? 'alert-warning' : ''}`}>\r\n          {atualizandoStatus ? '⏳ Atualizando status...' : mensagem}\r\n        </div>\r\n      )}\r\n\r\n      {/* Código existente de filtros e botões */}\r\n      <div className=\"d-flex gap-2 mb-3\">\r\n        {/* ... */}\r\n      </div>\r\n\r\n      <div className=\"d-flex flex-wrap justify-content-end gap-2 mb-2\">\r\n        {/* ... */}\r\n      </div>\r\n\r\n      <div className=\"table-responsive\">\r\n        <table className=\"table table-bordered table-hover text-center align-middle fs-6\">\r\n          <thead className=\"table-light\">\r\n            {/* ... */}\r\n          </thead>\r\n          <tbody>\r\n            {empresas\r\n              .filter(emp =>\r\n                Object.entries(filtros).every(([campo, valor]) =>\r\n                  emp[campo]?.toString().toLowerCase().includes(valor.toLowerCase())\r\n                )\r\n              )\r\n              .map((empresa) => (\r\n                <tr key={empresa.cnpj}>\r\n                  <td>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={selecionadas.includes(empresa.cnpj)}\r\n                      onChange={() => handleCheckbox(empresa.cnpj)}\r\n                    />\r\n                  </td>\r\n                  <td>{empresa.cod}</td>\r\n                  <td className=\"text-start\">{empresa.razaosocial}</td>\r\n                  <td>{empresa.operador}</td>\r\n                  <td>{empresa.cnpj}</td>\r\n                  <td>\r\n                    <span className={`badge ${empresa.situacao === 'Não gerado' ? 'bg-danger' : 'bg-success'}`}>\r\n                      {empresa.situacao}\r\n                    </span>\r\n                  </td>\r\n                  <td>\r\n                    <span className={\r\n                      empresa.pagamento === 'LANÇADO'\r\n                        ? 'text-success fw-bold'\r\n                        : empresa.pagamento\r\n                          ? 'text-danger fw-bold'\r\n                          : 'text-muted'\r\n                    }>\r\n                      {empresa.pagamento || '-'}\r\n                    </span>\r\n                  </td>\r\n                  <td>{empresa.data_vencimento || '-'}</td>\r\n                  <td>{empresa.valor}</td>\r\n                  \r\n                  {/* Célula Postado modificada para ser clicável e atualizar status */}\r\n                  <td>\r\n                    <button\r\n                      className={`btn btn-sm ${empresa.postado === 'Sim' ? 'btn-success' : 'btn-outline-secondary'}`}\r\n                      onClick={() => alternarStatusPostado(empresa.cnpj, empresa.postado)}\r\n                      disabled={atualizandoStatus}\r\n                    >\r\n                      {empresa.postado || 'Não'}\r\n                    </button>\r\n                  </td>\r\n                  \r\n                  <td>{empresa.data_geracao || '-'}</td>\r\n                </tr>\r\n              ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dctfweb;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}