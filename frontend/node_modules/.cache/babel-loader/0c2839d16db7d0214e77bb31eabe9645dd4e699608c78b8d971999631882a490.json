{"ast":null,"code":"import React from'react';import{Navigate,Outlet}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";const isTokenValid=token=>{try{const payload=JSON.parse(atob(token.split('.')[1]));const now=Date.now()/1000;return payload.exp>now;}catch(e){return false;}};const PrivateRoute=()=>{const token=localStorage.getItem('access');const isAuthenticated=token&&isTokenValid(token);return isAuthenticated?/*#__PURE__*/_jsx(Outlet,{}):/*#__PURE__*/_jsx(Navigate,{to:\"/login\",replace:true});};export default PrivateRoute;","map":{"version":3,"names":["React","Navigate","Outlet","jsx","_jsx","isTokenValid","token","payload","JSON","parse","atob","split","now","Date","exp","e","PrivateRoute","localStorage","getItem","isAuthenticated","to","replace"],"sources":["C:/Users/elean/salvar_comece/frontend/src/routes/PrivateRoute.js"],"sourcesContent":["import React from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\n\nconst isTokenValid = (token) => {\n  try {\n    const payload = JSON.parse(atob(token.split('.')[1]));\n    const now = Date.now() / 1000;\n    return payload.exp > now;\n  } catch (e) {\n    return false;\n  }\n};\n\nconst PrivateRoute = () => {\n  const token = localStorage.getItem('access');\n  const isAuthenticated = token && isTokenValid(token);\n\n  return isAuthenticated ? <Outlet /> : <Navigate to=\"/login\" replace />;\n};\n\nexport default PrivateRoute;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,CAAEC,MAAM,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEpD,KAAM,CAAAC,YAAY,CAAIC,KAAK,EAAK,CAC9B,GAAI,CACF,KAAM,CAAAC,OAAO,CAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACJ,KAAK,CAACK,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACrD,KAAM,CAAAC,GAAG,CAAGC,IAAI,CAACD,GAAG,CAAC,CAAC,CAAG,IAAI,CAC7B,MAAO,CAAAL,OAAO,CAACO,GAAG,CAAGF,GAAG,CAC1B,CAAE,MAAOG,CAAC,CAAE,CACV,MAAO,MAAK,CACd,CACF,CAAC,CAED,KAAM,CAAAC,YAAY,CAAGA,CAAA,GAAM,CACzB,KAAM,CAAAV,KAAK,CAAGW,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAC5C,KAAM,CAAAC,eAAe,CAAGb,KAAK,EAAID,YAAY,CAACC,KAAK,CAAC,CAEpD,MAAO,CAAAa,eAAe,cAAGf,IAAA,CAACF,MAAM,GAAE,CAAC,cAAGE,IAAA,CAACH,QAAQ,EAACmB,EAAE,CAAC,QAAQ,CAACC,OAAO,MAAE,CAAC,CACxE,CAAC,CAED,cAAe,CAAAL,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}