{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elean\\\\Saber_em_container\\\\frontend\\\\src\\\\routes\\\\PrivateRoute.js\";\nimport React from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isTokenValid = token => {\n  try {\n    const payload = JSON.parse(atob(token.split('.')[1]));\n    const now = Date.now() / 1000;\n    return payload.exp && payload.exp > now;\n  } catch (e) {\n    console.warn('Token inválido ou malformado:', e);\n    return false;\n  }\n};\nconst PrivateRoute = () => {\n  const token = localStorage.getItem('access');\n  if (!token || !isTokenValid(token)) {\n    // Token expirado ou inválido, limpa o localStorage\n    localStorage.removeItem('access');\n    localStorage.removeItem('refresh'); // caso use refresh também\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 10\n  }, this);\n};\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Navigate","Outlet","jsxDEV","_jsxDEV","isTokenValid","token","payload","JSON","parse","atob","split","now","Date","exp","e","console","warn","PrivateRoute","localStorage","getItem","removeItem","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/elean/Saber_em_container/frontend/src/routes/PrivateRoute.js"],"sourcesContent":["import React from 'react';\r\nimport { Navigate, Outlet } from 'react-router-dom';\r\n\r\nconst isTokenValid = (token) => {\r\n  try {\r\n    const payload = JSON.parse(atob(token.split('.')[1]));\r\n    const now = Date.now() / 1000;\r\n    return payload.exp && payload.exp > now;\r\n  } catch (e) {\r\n    console.warn('Token inválido ou malformado:', e);\r\n    return false;\r\n  }\r\n};\r\n\r\nconst PrivateRoute = () => {\r\n  const token = localStorage.getItem('access');\r\n\r\n  if (!token || !isTokenValid(token)) {\r\n    // Token expirado ou inválido, limpa o localStorage\r\n    localStorage.removeItem('access');\r\n    localStorage.removeItem('refresh'); // caso use refresh também\r\n    return <Navigate to=\"/login\" replace />;\r\n  }\r\n\r\n  return <Outlet />;\r\n};\r\n\r\nexport default PrivateRoute;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,MAAM,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAC9B,IAAI;IACF,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACJ,KAAK,CAACK,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrD,MAAMC,GAAG,GAAGC,IAAI,CAACD,GAAG,CAAC,CAAC,GAAG,IAAI;IAC7B,OAAOL,OAAO,CAACO,GAAG,IAAIP,OAAO,CAACO,GAAG,GAAGF,GAAG;EACzC,CAAC,CAAC,OAAOG,CAAC,EAAE;IACVC,OAAO,CAACC,IAAI,CAAC,+BAA+B,EAAEF,CAAC,CAAC;IAChD,OAAO,KAAK;EACd;AACF,CAAC;AAED,MAAMG,YAAY,GAAGA,CAAA,KAAM;EACzB,MAAMZ,KAAK,GAAGa,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;EAE5C,IAAI,CAACd,KAAK,IAAI,CAACD,YAAY,CAACC,KAAK,CAAC,EAAE;IAClC;IACAa,YAAY,CAACE,UAAU,CAAC,QAAQ,CAAC;IACjCF,YAAY,CAACE,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC;IACpC,oBAAOjB,OAAA,CAACH,QAAQ;MAACqB,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACzC;EAEA,oBAAOvB,OAAA,CAACF,MAAM;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACnB,CAAC;AAACC,EAAA,GAXIV,YAAY;AAalB,eAAeA,YAAY;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}